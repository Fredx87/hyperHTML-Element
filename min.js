const HyperHTMLElement=(e=>class extends HTMLElement{static define(t){const a=this,r=a.prototype;if((a.observedAttributes||[]).forEach(t=>{t in r||e(r,t.replace(/-([a-z])/g,(e,t)=>t.toUpperCase()),{configurable:!0,get(){return this.getAttribute(t)},set(e){this.setAttribute(t,e)}})}),"ready"in r){let t=!0;const a=r.attributeChangedCallback,l=!!a;e(r,"attributeChangedCallback",{configurable:!0,value(e,r,n){t&&(t=!1,this.ready()),l&&r!==n&&a.apply(this,arguments)}});const n=r.connectedCallback,i=!!n;e(r,"connectedCallback",{configurable:!0,value(){t&&(t=!1,this.ready()),i&&n.apply(this,arguments)}})}return customElements.define(t,a),a}get html(){return e(this,"html",{configurable:!0,value:hyperHTML.bind(this.shadowRoot||this)}).html}})(Object.defineProperty);try{module.exports=HyperHTMLElement}catch(e){}