const HyperHTMLElement=(e=>{/*! (C) 2017 Andrea Giammarchi - ISC Style License */
const t={value:!1};return class extends HTMLElement{static define(a){const i=this,r=i.prototype;(i.observedAttributes||[]).forEach(t=>{t in r||e(r,t.replace(/-([a-z])/g,(e,t)=>t.toUpperCase()),{configurable:!0,get(){return this.getAttribute(t)},set(e){this.setAttribute(t,e)}})});const n=r.attributeChangedCallback,l=!!n,s=r.created;if(s){e(r,"_init$",{configurable:!0,writable:!0,value:!0}),e(r,"attributeChangedCallback",{configurable:!0,value(a,i,r){this._init$&&s.call(e(this,"_init$",t)),l&&i!==r&&n.apply(this,arguments)}});const a=r.connectedCallback,i=!!a;e(r,"connectedCallback",{configurable:!0,value(){this._init$&&s.call(e(this,"_init$",t)),i&&a.apply(this,arguments)}})}else l&&e(r,"attributeChangedCallback",{configurable:!0,value(e,t,a){t!==a&&n.apply(this,arguments)}});return Object.getOwnPropertyNames(r).forEach(t=>{if(/^handle[A-Z]/.test(t)){const a="_"+t+"$",i=r[t];e(r,t,{configurable:!0,get(){return this[a]||(this[a]=i.bind(this))}})}}),"handleEvent"in r||e(r,"handleEvent",{configurable:!0,value(e){this[e.currentTarget.dataset.call||"on"+e.type](e)}}),customElements.define(a,i),i}get html(){return this._hyperHTML$||e(this,"_hyperHTML$",{configurable:!0,value:hyperHTML.bind(this.shadowRoot||this._shadowRoot||this)})._hyperHTML$}}})(Object.defineProperty);try{module.exports=HyperHTMLElement;var hyperHTML=hyperHTML||require("hyperhtml")}catch(e){}